# Dockerfile for Docs service
FROM node:18-alpine AS base
WORKDIR /app

# Install dependencies needed for native modules
RUN apk add --no-cache libc6-compat python3 make g++

# Copy workspace configuration and package files
COPY package.json yarn.lock turbo.json ./

# Create app directories and copy package.json files
RUN mkdir -p apps/api apps/web apps/docs apps/mobile
COPY apps/api/package.json ./apps/api/
COPY apps/web/package.json ./apps/web/
COPY apps/docs/package.json ./apps/docs/
COPY apps/mobile/package.json ./apps/mobile/

# Copy all packages (needed for workspace resolution)
COPY packages/ ./packages/

# Enable corepack for yarn
RUN corepack enable

# Dependencies stage
FROM base AS deps
RUN yarn install --frozen-lockfile --production=false

# Build stage
FROM base AS builder
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Build the Docs app using turbo
RUN yarn turbo build --filter=docs

# Production stage
FROM node:18-alpine AS production
WORKDIR /app

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copy built Next.js docs app
COPY --from=builder --chown=nextjs:nodejs /app/apps/docs/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/apps/docs/.next/static ./apps/docs/.next/static
COPY --from=builder --chown=nextjs:nodejs /app/apps/docs/public ./apps/docs/public

USER nextjs
EXPOSE 3001
ENV NODE_ENV=production
ENV PORT=3001
ENV HOSTNAME="0.0.0.0"

CMD ["node", "apps/docs/server.js"] 